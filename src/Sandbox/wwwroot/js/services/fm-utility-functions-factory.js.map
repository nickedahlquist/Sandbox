{"version":3,"names":[],"mappings":"","sources":["services/fm-utility-functions-factory.js"],"sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('fm').factory('fmUtilityFunctions', [function () {\r\n      return {\r\n        intToArray: function (number) {\r\n          return new Array(number);\r\n        },\r\n        truncateText: function (maxLengthIn, textIn) {\r\n          var text = textIn.trim() + ' ';\r\n          var maxLength = maxLengthIn;\r\n\r\n          //trim the string to the maximum length\r\n          var trimmedText= text.substr(0, maxLength);\r\n\r\n          //re-trim if we are in the middle of a word\r\n          trimmedText = trimmedText.substr(0, Math.min(trimmedText.length, trimmedText.lastIndexOf(\" \")));\r\n          return trimmedText = (trimmedText.substr(trimmedText.length - 1) === '.') ? trimmedText + '..' : trimmedText + '...';\r\n        },\r\n        formatDate: function (date) {\r\n          var d = new Date(date),\r\n              month = '' + (d.getMonth() + 1),\r\n              day = '' + d.getDate(),\r\n              year = d.getFullYear();\r\n\r\n          if (month.length < 2) month = '0' + month;\r\n          if (day.length < 2) day = '0' + day;\r\n\r\n          return [year, month, day].join('-');\r\n        },\r\n        blendColor: function (color, percent) {\r\n\r\n          var R = parseInt(color.substring(1, 3), 16);\r\n          var G = parseInt(color.substring(3, 5), 16);\r\n          var B = parseInt(color.substring(5, 7), 16);\r\n\r\n          R = parseInt(R * (100 + percent) / 100);\r\n          G = parseInt(G * (100 + percent) / 100);\r\n          B = parseInt(B * (100 + percent) / 100);\r\n\r\n          R = (R < 255) ? R : 255;\r\n          G = (G < 255) ? G : 255;\r\n          B = (B < 255) ? B : 255;\r\n\r\n          var RR = ((R.toString(16).length == 1) ? \"0\" + R.toString(16) : R.toString(16));\r\n          var GG = ((G.toString(16).length == 1) ? \"0\" + G.toString(16) : G.toString(16));\r\n          var BB = ((B.toString(16).length == 1) ? \"0\" + B.toString(16) : B.toString(16));\r\n\r\n          return \"#\" + RR + GG + BB;\r\n        }\r\n      }\r\n    }]);\r\n\r\n})();\r\n"],"file":"services/fm-utility-functions-factory.js","sourceRoot":"/source/"}