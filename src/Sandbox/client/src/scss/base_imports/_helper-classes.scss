/*
 * _helper-classes.scss
 * ====================
 * 
 * This file will house a collection of css helper-classes. These
 * classes should be kept fairly "low-level" as to maximize their 
 * general applicability, that is to say they should be sematically 
 * separated from the document-wide\component-wide theme.
 * 
 */

/*---------------------------
  text-helpers:                     
---------------------------*/

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

.text-light {
  font-weight: $font-weight-light;
}

.text-semibold {
  font-weight: $font-weight-semibold;
}

.text-bold {
  font-weight: $font-weight-bold;
}

.text-accent {
  color: $color-accent !important;
}

.text-white {
  color: $color-white !important;
}

.text-warning {
  color: $color-red !important;
}

.text-caption {
  font-size: $font-size-caption;
}

.text-small {
  font-size: $font-size-small;
}

.text-truncate {
  max-width: 45rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/*---------------------------
  padding-helpers:                     
---------------------------*/

.no-padding {
  padding: 0 !important;
}

.section-padding {
  padding-top: $layout-section-padding/4;
  padding-bottom: $layout-section-padding/4;

  @media(min-width: $screen-sm) {
    padding-top: $layout-section-padding/2;
    padding-bottom: $layout-section-padding/2;
  }

  @media(min-width: $screen-md) {
    padding-top: $layout-section-padding;
    padding-bottom: $layout-section-padding;
  }
}

/*---------------------------
  margin-helpers:                     
---------------------------*/

.no-margin {
  margin: 0 !important;
}

.margin-bottom-lg {
  margin-bottom: $layout-modifier-sm;

  @media(min-width: $screen-md) {
    margin-bottom: $layout-modifier-lg;
  }
}

.margin-bottom-sm {
  margin-bottom: $layout-modifier-sm / 2;

  @media(min-width: $screen-sm) {
    margin-bottom: $layout-modifier-sm;
  }
}

/*---------------------------
  display-helpers:                     
---------------------------*/

.display-none {
  display: none !important;
}

.display-block {
  display: block !important;
}

.display-inline {
  display: inline !important;
}

.display-inline-block {
  display: inline-block !important;
}

.display-flex {
  display: flex;

  &.flex-center {
    justify-content: center;
  }
}

/*---------------------------
  border-helpers:                     
---------------------------*/

.no-border {
  border: 0;
}

/*---------------------------
  background-helpers:                     
---------------------------*/

.background-light {
  background-color: $color-white !important;
}

.background-dark {
  background-color: $color-light-grey !important;
}

.background-black {
  background-color: $color-dark-grey !important; 
}

.background-accent {
  background-color: $color-accent !important;
}

/*---------------------------
  background-image-helpers:                     
---------------------------*/

// The background-image property needs to be set via the style attribute 
.background-image-cover {
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: cover;
}

/*---------------------------
  hover-helpers:                     
---------------------------*/

.hover-up {
  transform: translate3d(0, 0, 0);
  transition: transform $animation-transition-short ease-in-out;

  &:hover {
    transform: translate3d(0, -1em, 0);
  }
}

.stagger {

  &.ng-enter-stagger {
    transition-delay: $animation-transition-short/2;
    transition-duration: 0;
  }

  &.ng-leave.ng-leave-active, &.ng-move, &.ng-enter {
    opacity: 0;
    transform: scale3d(0.95, 0.95, 0.95);
    transition: all $animation-transition-short ease-in;
  }

  &.ng-leave, &.ng-move.ng-move-active, &.ng-enter.ng-enter-active {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}


// REMOVE LATER, for demo
.newspaper {
    column-count: 1;
    column-gap: $layout-modifier-lg;
    column-rule-style: none;
    column-fill: auto;
    text-align: left;
    
    @media(min-width: $screen-md) {
      column-count: 2;
      text-align: justify;
    }
 }

ul.pagination {
  margin: 0 auto;
  border-radius: $border-radius-sm;

  li {

    &.active {

      a {
        color: $color-white;
        background-color: $color-accent !important;
        border-color: $color-accent !important;
      }
    }

    &.disabled {

      a {
        color: inherit !important;
        line-height: inherit !important;
        background-color: $color-white !important;
        border-color: $color-light-grey-shade !important;
      }
    }

    &:first-child {

      a {
        border-bottom-left-radius: $border-radius-sm;
        border-top-left-radius: $border-radius-sm;
      }
    }

    &:last-child {

      a {
        border-bottom-right-radius: $border-radius-sm;
        border-top-right-radius: $border-radius-sm;
      }
    }

    a {
      color: inherit;
      line-height: inherit;
      background-color: $color-white;
      border-color: $color-light-grey-shade;

      &:hover {
        color: inherit;
        background-color: $color-light-grey-shade;
        border-color: $color-light-grey-shade;
      }
    }
  }
}

.scrollable-menu {
    height: auto;
    width: 40rem;
    max-width: 50rem;
    max-height: 20rem;
    overflow-x: hidden;
}

      /*&.ng-enter-stagger {
        transition-delay: $animation-transition-short/4;
        transition-duration: 0;
      }

      &.ng-move, &.ng-enter, &.ng-leave {
        transition: opacity $animation-transition-short linear;
        //transition: all 175ms linear;
      }

      &.ng-leave.ng-leave-active, &.ng-move, &.ng-enter {
        opacity: 0;
        //transform: translate3d(5rem, 0, 0); 
        //transform: scale3d(0.5, 0.5, 0.5);
      }

      &.ng-leave, &.ng-move.ng-move-active, &.ng-enter.ng-enter-active {
        opacity: 1;
        //transform: translate3d(-1rem, 0, 0); 
        //transform: scale3d(1, 1, 1);
      }*/

#pie-chart {

  svg {

    .highcharts-series {
      

      &:hover {

        path {
          opacity: 0.7;

          &:hover {
            transform: translate3d(0, -1rem, 0);
            opacity: 1.0;
          }
        }
      }

      path {
        transition: all $animation-transition-short ease-in-out;
      }
    }
  }
}

